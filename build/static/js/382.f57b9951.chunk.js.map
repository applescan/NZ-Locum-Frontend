{"version":3,"file":"static/js/382.f57b9951.chunk.js","mappings":"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","sources":["components/sections/Cards/DoctorCards.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport ButtonBlue from '../../elements/ButtonBlue';\r\nimport ButtonBlueOutlined from '../../elements/ButtonBlueOutlined';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport {\r\n    MDBTabs,\r\n    MDBTabsItem,\r\n    MDBTabsLink,\r\n    MDBTabsContent,\r\n    MDBTabsPane\r\n} from 'mdb-react-ui-kit';\r\n\r\nexport default function DoctorList() {\r\n\r\n    const [posts, setPost] = useState([])\r\n    const [northland, setNorthland] = useState([])\r\n    const [auckland, setAuckland] = useState([])\r\n    const [wellington, setWellington] = useState([])\r\n    const [dunedin, setDunedin] = useState([])\r\n    const [christchurch, setChristchurch] = useState([])\r\n    const [queenstown, setQueenstown] = useState([])\r\n    const [error, setError] = useState(\"\")\r\n    const [basicActive, setBasicActive] = useState('all');\r\n\r\n    const handleBasicClick = (value: string) => {\r\n        if (value === basicActive) {\r\n            return;\r\n        }\r\n\r\n        setBasicActive(value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get('https://nz-locum-backend.herokuapp.com/doctors/all')\r\n            .then(res => {\r\n                console.log(res)\r\n                setPost(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                setError('Error retrieving data')\r\n            })\r\n    }, []) //only do get request on load\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get('https://nz-locum-backend.herokuapp.com/doctors/search/city/north')\r\n            .then(res => {\r\n                //console.log(res)\r\n                setNorthland(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                setError('Error retrieving data')\r\n            })\r\n    }, []) //only do get request on load\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get('https://nz-locum-backend.herokuapp.com/doctors/search/city/auck')\r\n            .then(res => {\r\n                //console.log(res)\r\n                setAuckland(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                setError('Error retrieving data')\r\n            })\r\n    }, []) //only do get request on load\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get('https://nz-locum-backend.herokuapp.com/doctors/search/city/well')\r\n            .then(res => {\r\n                //console.log(res)\r\n                setWellington(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                setError('Error retrieving data')\r\n            })\r\n    }, []) //only do get request on load\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get('https://nz-locum-backend.herokuapp.com/doctors/search/city/dun')\r\n            .then(res => {\r\n                //console.log(res)\r\n                setDunedin(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                setError('Error retrieving data')\r\n            })\r\n    }, []) //only do get request on load\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get('https://nz-locum-backend.herokuapp.com/doctors/search/city/chr')\r\n            .then(res => {\r\n                //console.log(res)\r\n                setChristchurch(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                setError('Error retrieving data')\r\n            })\r\n    }, []) //only do get request on load\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get('https://nz-locum-backend.herokuapp.com/doctors/search/city/queen')\r\n            .then(res => {\r\n                //console.log(res)\r\n                setQueenstown(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                setError('Error retrieving data')\r\n            })\r\n    }, []) //only do get request on load\r\n\r\n\r\n    return (\r\n        <>\r\n            <MDBTabs pills justify className='mb-3' id='cards'>\r\n                <MDBTabsItem>\r\n                    <MDBTabsLink onClick={() => handleBasicClick('all')} active={basicActive === 'all'}  >\r\n                        All\r\n                    </MDBTabsLink>\r\n                </MDBTabsItem>\r\n\r\n                <MDBTabsItem>\r\n                    <MDBTabsLink onClick={() => handleBasicClick('Northland')} active={basicActive === 'Northland'}>\r\n                        Northland\r\n                    </MDBTabsLink>\r\n                </MDBTabsItem>\r\n\r\n                <MDBTabsItem>\r\n                    <MDBTabsLink onClick={() => handleBasicClick('Auckland')} active={basicActive === 'Auckland'}>\r\n                        Auckland\r\n                    </MDBTabsLink>\r\n                </MDBTabsItem>\r\n\r\n                <MDBTabsItem>\r\n                    <MDBTabsLink onClick={() => handleBasicClick('Wellington')} active={basicActive === 'Wellington'}>\r\n                        Wellington\r\n                    </MDBTabsLink>\r\n                </MDBTabsItem>\r\n\r\n                <MDBTabsItem>\r\n                    <MDBTabsLink onClick={() => handleBasicClick('Dunedin')} active={basicActive === 'Dunedin'}>\r\n                        Dunedin\r\n                    </MDBTabsLink>\r\n                </MDBTabsItem>\r\n\r\n                <MDBTabsItem>\r\n                    <MDBTabsLink onClick={() => handleBasicClick('Christchurch')} active={basicActive === 'Christchurch'}>\r\n                        Christchurch\r\n                    </MDBTabsLink>\r\n                </MDBTabsItem>\r\n\r\n                <MDBTabsItem>\r\n                    <MDBTabsLink onClick={() => handleBasicClick('Queenstown')} active={basicActive === 'Queenstown'}>\r\n                        Queenstown\r\n                    </MDBTabsLink>\r\n                </MDBTabsItem>\r\n            </MDBTabs>\r\n\r\n            <MDBTabsContent>\r\n                <MDBTabsPane show={basicActive === 'all'}>\r\n                    <Row xs={1} md={3} lg={4} className=\"g-4\" id='cards'>\r\n                        {posts.map(post =>\r\n                            <Col>\r\n                                <Card style={{ width: 'auto' }}>\r\n                                    <Card.Img variant=\"top\" src={`https://nz-locum-backend.herokuapp.com/images/${post.imageKey}`} style={{ width: 'auto', height: '300px', objectFit: 'cover' }} />\r\n                                    <div id='cards'>\r\n                                        <Card.Title>Dr. {post.first_name} {post.last_name} </Card.Title>\r\n                                        <Card.Text>\r\n                                            {post.city}, New Zealand\r\n                                        </Card.Text>\r\n                                    </div>\r\n                                    <ListGroup className=\"list-group-flush\">\r\n                                        <ListGroup.Item><b>Email: </b>{post.email}</ListGroup.Item>\r\n                                        <ListGroup.Item><b>Phone: </b>{post.phone}</ListGroup.Item>\r\n                                        <ListGroup.Item><b>Specialities: </b>{post.specialities}</ListGroup.Item>\r\n                                        <ListGroup.Item><b>License: </b>{post.license}</ListGroup.Item>\r\n                                        <ListGroup.Item><b>Availability: </b>{post.availability}</ListGroup.Item>\r\n                                        <ListGroup.Item><b>Work Requirement: </b>{post.work_requirement}</ListGroup.Item>\r\n                                    </ListGroup>\r\n                                    <span id='cards'>\r\n                                        <Card.Link href={`mailto:${post.email}`}><ButtonBlue name=\"Email\" size='sml'></ButtonBlue></Card.Link>\r\n                                        <Card.Link href={`tel:${post.phone}`}><ButtonBlueOutlined onClick='hello' name=\"Call Me\" style={{ marginRight: 30 }} size='sml'></ButtonBlueOutlined></Card.Link>\r\n                                    </span>\r\n                                </Card>\r\n                            </Col>\r\n\r\n                        )}\r\n\r\n                        {error ? <Alert key='danger' variant='danger' id='cards'> {error.toString()}</Alert> : null}\r\n                    </Row>\r\n                </MDBTabsPane>\r\n\r\n                <MDBTabsPane show={basicActive === 'Northland'}>\r\n                    {/* if there's data then show cards, if not then show error */}\r\n                    {northland.length > 0 ?\r\n                        <Row xs={1} md={3} lg={4} className=\"g-4\" id='cards'>\r\n                            {northland.map(north =>\r\n                                <Col>\r\n                                    <Card style={{ width: 'auto' }}>\r\n                                        <Card.Img variant=\"top\" src={`https://nz-locum-backend.herokuapp.com/images/${north.imageKey}`} style={{ width: 'auto', height: '300px', objectFit: 'cover' }} />\r\n                                        <div id='cards'>\r\n                                            <Card.Title>Dr. {north.first_name} {north.last_name} </Card.Title>\r\n                                            <Card.Text>\r\n                                                {north.city}, New Zealand\r\n                                            </Card.Text>\r\n                                        </div>\r\n                                        <ListGroup className=\"list-group-flush\">\r\n                                            <ListGroup.Item><b>Email: </b>{north.email}</ListGroup.Item>\r\n                                            <ListGroup.Item><b>Phone: </b>{north.phone}</ListGroup.Item>\r\n                                            <ListGroup.Item><b>Specialities: </b>{north.specialities}</ListGroup.Item>\r\n                                            <ListGroup.Item><b>License: </b>{north.license}</ListGroup.Item>\r\n                                            <ListGroup.Item><b>Availability: </b>{north.availability}</ListGroup.Item>\r\n                                            <ListGroup.Item><b>Work Requirement: </b>{north.work_requirement}</ListGroup.Item>\r\n                                        </ListGroup>\r\n                                        <span id='cards'>\r\n                                            <Card.Link href={`mailto:${north.email}`}><ButtonBlue name=\"Email\" size='sml'></ButtonBlue></Card.Link>\r\n                                            <Card.Link href={`tel:${north.phone}`}><ButtonBlueOutlined onClick='hello' name=\"Call Me\" style={{ marginRight: 30 }} size='sml'></ButtonBlueOutlined></Card.Link>\r\n                                        </span>\r\n                                    </Card>\r\n                                </Col>\r\n\r\n                            )}\r\n\r\n                            {error ? <Alert key='danger' variant='danger'> {error.toString()}</Alert> : null}\r\n\r\n                        </Row>\r\n                        : <div id='card-page'><Alert id='cards'>No doctors in this area</Alert></div>}\r\n                </MDBTabsPane>\r\n\r\n                <MDBTabsPane show={basicActive === 'Auckland'}>\r\n                    {/* if there's data then show cards, if not then show error */}\r\n                    {auckland.length > 0 ?\r\n                        <Row xs={1} md={3} lg={4} className=\"g-4\" id='cards'>\r\n                            {auckland.map(auck =>\r\n                                <Col>\r\n                                    <Card style={{ width: 'auto' }}>\r\n                                        <Card.Img variant=\"top\" src={`https://nz-locum-backend.herokuapp.com/images/${auck.imageKey}`} style={{ width: 'auto', height: '300px', objectFit: 'cover' }} />\r\n                                        <div id='cards'>\r\n                                            <Card.Title>Dr. {auck.first_name} {auck.last_name} </Card.Title>\r\n                                            <Card.Text>\r\n                                                {auck.city}, New Zealand\r\n                                            </Card.Text>\r\n                                        </div>\r\n                                        <ListGroup className=\"list-group-flush\">\r\n                                            <ListGroup.Item><b>Email: </b>{auck.email}</ListGroup.Item>\r\n                                            <ListGroup.Item><b>Phone: </b>{auck.phone}</ListGroup.Item>\r\n                                            <ListGroup.Item><b>Specialities: </b>{auck.specialities}</ListGroup.Item>\r\n                                            <ListGroup.Item><b>License: </b>{auck.license}</ListGroup.Item>\r\n                                            <ListGroup.Item><b>Availability: </b>{auck.availability}</ListGroup.Item>\r\n                                            <ListGroup.Item><b>Work Requirement: </b>{auck.work_requirement}</ListGroup.Item>\r\n                                        </ListGroup>\r\n                                        <span id='cards'>\r\n                                            <Card.Link href={`mailto:${auck.email}`}><ButtonBlue name=\"Email\" size='sml'></ButtonBlue></Card.Link>\r\n                                            <Card.Link href={`tel:${auck.phone}`}><ButtonBlueOutlined onClick='hello' name=\"Call Me\" style={{ marginRight: 30 }} size='sml'></ButtonBlueOutlined></Card.Link>\r\n                                        </span>\r\n                                    </Card>\r\n                                </Col>\r\n\r\n                            )}\r\n\r\n                            {error ? <Alert key='danger' variant='danger'> {error.toString()}</Alert> : null}\r\n\r\n                        </Row>\r\n                        : <div id='card-page'><Alert id='cards'>No doctors in this area</Alert></div>}\r\n                </MDBTabsPane>\r\n\r\n                <MDBTabsPane show={basicActive === 'Wellington'}>\r\n                    {/* if there's data then show cards, if not then show error */}\r\n                    {wellington.length > 0 ?\r\n                        <Row xs={1} md={3} lg={4} className=\"g-4\" id='cards'>\r\n                            {wellington.map(wlg =>\r\n                                <Col>\r\n                                    <Card style={{ width: 'auto' }}>\r\n                                        <Card.Img variant=\"top\" src={`https://nz-locum-backend.herokuapp.com/images/${wlg.imageKey}`} style={{ width: 'auto', height: '300px', objectFit: 'cover' }} />\r\n                                        <div id='cards'>\r\n                                            <Card.Title>Dr. {wlg.first_name} {wlg.last_name} </Card.Title>\r\n                                            <Card.Text>\r\n                                                {wlg.city}, New Zealand\r\n                                            </Card.Text>\r\n                                        </div>\r\n                                        <ListGroup className=\"list-group-flush\">\r\n                                            <ListGroup.Item><b>Email: </b>{wlg.email}</ListGroup.Item>\r\n                                            <ListGroup.Item><b>Phone: </b>{wlg.phone}</ListGroup.Item>\r\n                                            <ListGroup.Item><b>Specialities: </b>{wlg.specialities}</ListGroup.Item>\r\n                                            <ListGroup.Item><b>License: </b>{wlg.license}</ListGroup.Item>\r\n                                            <ListGroup.Item><b>Availability: </b>{wlg.availability}</ListGroup.Item>\r\n                                            <ListGroup.Item><b>Work Requirement: </b>{wlg.work_requirement}</ListGroup.Item>\r\n                                        </ListGroup>\r\n                                        <span id='cards'>\r\n                                            <Card.Link href={`mailto:${wlg.email}`}><ButtonBlue name=\"Email\" size='sml'></ButtonBlue></Card.Link>\r\n                                            <Card.Link href={`tel:${wlg.phone}`}><ButtonBlueOutlined onClick='hello' name=\"Call Me\" style={{ marginRight: 30 }} size='sml'></ButtonBlueOutlined></Card.Link>\r\n                                        </span>\r\n                                    </Card>\r\n                                </Col>\r\n\r\n                            )}\r\n\r\n                            {error ? <Alert key='danger' variant='danger'> {error.toString()}</Alert> : null}\r\n\r\n                        </Row>\r\n                        : <div id='card-page'><Alert id='cards'>No doctors in this area</Alert></div>}\r\n                </MDBTabsPane>\r\n\r\n                <MDBTabsPane show={basicActive === 'Dunedin'}>\r\n                    {/* if there's data then show cards, if not then show error */}\r\n                    {dunedin.length > 0 ?\r\n                        <Row xs={1} md={3} lg={4} className=\"g-4\" id='cards'>\r\n                            {dunedin.map(dune =>\r\n                                <Col>\r\n                                    <Card style={{ width: 'auto' }}>\r\n                                        <Card.Img variant=\"top\" src={`https://nz-locum-backend.herokuapp.com/images/${dune.imageKey}`} style={{ width: 'auto', height: '300px', objectFit: 'cover' }} />\r\n                                        <div id='cards'>\r\n                                            <Card.Title>Dr. {dune.first_name} {dune.last_name} </Card.Title>\r\n                                            <Card.Text>\r\n                                                {dune.city}, New Zealand\r\n                                            </Card.Text>\r\n                                        </div>\r\n                                        <ListGroup className=\"list-group-flush\">\r\n                                            <ListGroup.Item><b>Email: </b>{dune.email}</ListGroup.Item>\r\n                                            <ListGroup.Item><b>Phone: </b>{dune.phone}</ListGroup.Item>\r\n                                            <ListGroup.Item><b>Specialities: </b>{dune.specialities}</ListGroup.Item>\r\n                                            <ListGroup.Item><b>License: </b>{dune.license}</ListGroup.Item>\r\n                                            <ListGroup.Item><b>Availability: </b>{dune.availability}</ListGroup.Item>\r\n                                            <ListGroup.Item><b>Work Requirement: </b>{dune.work_requirement}</ListGroup.Item>\r\n                                        </ListGroup>\r\n                                        <span id='cards'>\r\n                                            <Card.Link href={`mailto:${dune.email}`}><ButtonBlue name=\"Email\" size='sml'></ButtonBlue></Card.Link>\r\n                                            <Card.Link href={`tel:${dune.phone}`}><ButtonBlueOutlined onClick='hello' name=\"Call Me\" style={{ marginRight: 30 }} size='sml'></ButtonBlueOutlined></Card.Link>\r\n                                        </span>\r\n                                    </Card>\r\n                                </Col>\r\n\r\n                            )}\r\n\r\n                            {error ? <Alert key='danger' variant='danger'> {error.toString()}</Alert> : null}\r\n\r\n                        </Row>\r\n                        : <div id='card-page'><Alert id='cards'>No doctors in this area</Alert></div>}\r\n                </MDBTabsPane>\r\n\r\n                <MDBTabsPane show={basicActive === 'Christchurch'}>\r\n                    {/* if there's data then show cards, if not then show error */}\r\n                    {christchurch.length > 0 ?\r\n                        <Row xs={1} md={3} lg={4} className=\"g-4\" id='cards'>\r\n                            {christchurch.map(chch =>\r\n                                <Col>\r\n                                    <Card style={{ width: 'auto' }}>\r\n                                        <Card.Img variant=\"top\" src={`https://nz-locum-backend.herokuapp.com/images/${chch.imageKey}`} style={{ width: 'auto', height: '300px', objectFit: 'cover' }} />\r\n                                        <div id='cards'>\r\n                                            <Card.Title>Dr. {chch.first_name} {chch.last_name} </Card.Title>\r\n                                            <Card.Text>\r\n                                                {chch.city}, New Zealand\r\n                                            </Card.Text>\r\n                                        </div>\r\n                                        <ListGroup className=\"list-group-flush\">\r\n                                            <ListGroup.Item><b>Email: </b>{chch.email}</ListGroup.Item>\r\n                                            <ListGroup.Item><b>Phone: </b>{chch.phone}</ListGroup.Item>\r\n                                            <ListGroup.Item><b>Specialities: </b>{chch.specialities}</ListGroup.Item>\r\n                                            <ListGroup.Item><b>License: </b>{chch.license}</ListGroup.Item>\r\n                                            <ListGroup.Item><b>Availability: </b>{chch.availability}</ListGroup.Item>\r\n                                            <ListGroup.Item><b>Work Requirement: </b>{chch.work_requirement}</ListGroup.Item>\r\n                                        </ListGroup>\r\n                                        <span id='cards'>\r\n                                            <Card.Link href={`mailto:${chch.email}`}><ButtonBlue name=\"Email\" size='sml'></ButtonBlue></Card.Link>\r\n                                            <Card.Link href={`tel:${chch.phone}`}><ButtonBlueOutlined onClick='hello' name=\"Call Me\" style={{ marginRight: 30 }} size='sml'></ButtonBlueOutlined></Card.Link>\r\n                                        </span>\r\n                                    </Card>\r\n                                </Col>\r\n\r\n                            )}\r\n\r\n                            {error ? <Alert key='danger' variant='danger'> {error.toString()}</Alert> : null}\r\n\r\n                        </Row>\r\n                        : <div id='card-page'><Alert id='cards'>No doctors in this area</Alert></div>}\r\n                </MDBTabsPane>\r\n\r\n                <MDBTabsPane show={basicActive === 'Queenstown'}>\r\n                    {/* if there's data then show cards, if not then show error */}\r\n                    {queenstown.length > 0 ?\r\n                        <Row xs={1} md={3} lg={4} className=\"g-4\" id='cards'>\r\n                            {queenstown.map(queens =>\r\n                                <Col>\r\n                                    <Card style={{ width: 'auto' }}>\r\n                                        <Card.Img variant=\"top\" src={`https://nz-locum-backend.herokuapp.com/images/${queens.imageKey}`} style={{ width: 'auto', height: '300px', objectFit: 'cover' }} />\r\n                                        <div id='cards'>\r\n                                            <Card.Title>Dr. {queens.first_name} {queens.last_name} </Card.Title>\r\n                                            <Card.Text>\r\n                                                {queens.city}, New Zealand\r\n                                            </Card.Text>\r\n                                        </div>\r\n                                        <ListGroup className=\"list-group-flush\">\r\n                                            <ListGroup.Item><b>Email: </b>{queens.email}</ListGroup.Item>\r\n                                            <ListGroup.Item><b>Phone: </b>{queens.phone}</ListGroup.Item>\r\n                                            <ListGroup.Item><b>Specialities: </b>{queens.specialities}</ListGroup.Item>\r\n                                            <ListGroup.Item><b>License: </b>{queens.license}</ListGroup.Item>\r\n                                            <ListGroup.Item><b>Availability: </b>{queens.availability}</ListGroup.Item>\r\n                                            <ListGroup.Item><b>Work Requirement: </b>{queens.work_requirement}</ListGroup.Item>\r\n                                        </ListGroup>\r\n                                        <span id='cards'>\r\n                                            <Card.Link href={`mailto:${queens.email}`}><ButtonBlue name=\"Email\" size='sml'></ButtonBlue></Card.Link>\r\n                                            <Card.Link href={`tel:${queens.phone}`}><ButtonBlueOutlined onClick='hello' name=\"Call Me\" style={{ marginRight: 30 }} size='sml'></ButtonBlueOutlined></Card.Link>\r\n                                        </span>\r\n                                    </Card>\r\n                                </Col>\r\n\r\n                            )}\r\n\r\n                            {error ? <Alert key='danger' variant='danger'> {error.toString()}</Alert> : null}\r\n\r\n                        </Row>\r\n                        : <div id='card-page'><Alert id='cards'>No doctors in this area</Alert></div>}\r\n                </MDBTabsPane>\r\n            </MDBTabsContent>\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["DoctorList","useState","posts","setPost","northland","setNorthland","auckland","setAuckland","wellington","setWellington","dunedin","setDunedin","christchurch","setChristchurch","queenstown","setQueenstown","error","setError","basicActive","setBasicActive","handleBasicClick","value","useEffect","axios","then","res","console","log","data","catch","err","pills","justify","className","id","onClick","active","show","xs","md","lg","map","post","style","width","variant","src","imageKey","height","objectFit","first_name","last_name","city","email","phone","specialities","license","availability","work_requirement","href","name","size","marginRight","toString","length","north","auck","wlg","dune","chch","queens"],"sourceRoot":""}
{"version":3,"file":"static/js/461.eb0d5056.chunk.js","mappings":"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","sources":["components/sections/Cards/JobCards.jsx","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport ButtonBlue from '../../elements/ButtonBlue';\r\nimport Row from 'react-bootstrap/Row';\r\nimport {\r\n    MDBTabs,\r\n    MDBTabsItem,\r\n    MDBTabsLink,\r\n    MDBTabsContent,\r\n    MDBTabsPane\r\n} from 'mdb-react-ui-kit';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nexport default function JobList() {\r\n\r\n    const [posts, setPost] = useState([])\r\n    const [northland, setNorthland] = useState([])\r\n    const [auckland, setAuckland] = useState([])\r\n    const [wellington, setWellington] = useState([])\r\n    const [dunedin, setDunedin] = useState([])\r\n    const [christchurch, setChristchurch] = useState([])\r\n    const [queenstown, setQueenstown] = useState([])\r\n    const [error, setError] = useState(\"\")\r\n    const [basicActive, setBasicActive] = useState('all');\r\n    const navigate = useNavigate()\r\n\r\n    const handleBasicClick = (value: string) => {\r\n        if (value === basicActive) {\r\n            return;\r\n        }\r\n\r\n        setBasicActive(value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get('https://nz-locum-backend.herokuapp.com/jobs/all')\r\n            .then(res => {\r\n                console.log(res)\r\n                setPost(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                setError('Error retrieving data')\r\n            })\r\n    }, []) //only do get request on load\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get('https://nz-locum-backend.herokuapp.com/jobs/search/north')\r\n            .then(res => {\r\n                //console.log(res)\r\n                setNorthland(res.data)\r\n            })\r\n            .catch(err => {\r\n                //console.log(err)\r\n                setError('Error retrieving data')\r\n            })\r\n    }, []) //only do get request on load\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get('https://nz-locum-backend.herokuapp.com/jobs/search/auck')\r\n            .then(res => {\r\n                //console.log(res)\r\n                setAuckland(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                setError('Error retrieving data')\r\n            })\r\n    }, []) //only do get request on load\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get('https://nz-locum-backend.herokuapp.com/jobs/search/well')\r\n            .then(res => {\r\n                //console.log(res)\r\n                setWellington(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                setError('Error retrieving data')\r\n            })\r\n    }, []) //only do get request on load\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get('https://nz-locum-backend.herokuapp.com/jobs/search/dun')\r\n            .then(res => {\r\n                //console.log(res)\r\n                setDunedin(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                setError('Error retrieving data')\r\n            })\r\n    }, []) //only do get request on load\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get('https://nz-locum-backend.herokuapp.com/jobs/search/chri')\r\n            .then(res => {\r\n                //console.log(res)\r\n                setChristchurch(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                setError('Error retrieving data')\r\n            })\r\n    }, []) //only do get request on load\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get('https://nz-locum-backend.herokuapp.com/jobs/search/queen')\r\n            .then(res => {\r\n                //console.log(res)\r\n                setQueenstown(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                setError('Error retrieving data')\r\n            })\r\n    }, []) //only do get request on load\r\n\r\n\r\n    return (\r\n        <>\r\n            <MDBTabs pills justify className='mb-3' id='cards'>\r\n                <MDBTabsItem>\r\n                    <MDBTabsLink onClick={() => handleBasicClick('all')} active={basicActive === 'all'}  >\r\n                        All\r\n                    </MDBTabsLink>\r\n                </MDBTabsItem>\r\n\r\n                <MDBTabsItem>\r\n                    <MDBTabsLink onClick={() => handleBasicClick('Northland')} active={basicActive === 'Northland'}>\r\n                        Northland\r\n                    </MDBTabsLink>\r\n                </MDBTabsItem>\r\n\r\n                <MDBTabsItem>\r\n                    <MDBTabsLink onClick={() => handleBasicClick('Auckland')} active={basicActive === 'Auckland'}>\r\n                        Auckland\r\n                    </MDBTabsLink>\r\n                </MDBTabsItem>\r\n\r\n                <MDBTabsItem>\r\n                    <MDBTabsLink onClick={() => handleBasicClick('Wellington')} active={basicActive === 'Wellington'}>\r\n                        Wellington\r\n                    </MDBTabsLink>\r\n                </MDBTabsItem>\r\n\r\n                <MDBTabsItem>\r\n                    <MDBTabsLink onClick={() => handleBasicClick('Dunedin')} active={basicActive === 'Dunedin'}>\r\n                        Dunedin\r\n                    </MDBTabsLink>\r\n                </MDBTabsItem>\r\n\r\n                <MDBTabsItem>\r\n                    <MDBTabsLink onClick={() => handleBasicClick('Christchurch')} active={basicActive === 'Christchurch'}>\r\n                        Christchurch\r\n                    </MDBTabsLink>\r\n                </MDBTabsItem>\r\n\r\n                <MDBTabsItem>\r\n                    <MDBTabsLink onClick={() => handleBasicClick('Queenstown')} active={basicActive === 'Queenstown'}>\r\n                        Queenstown\r\n                    </MDBTabsLink>\r\n                </MDBTabsItem>\r\n            </MDBTabs>\r\n\r\n            <MDBTabsContent>\r\n                <MDBTabsPane show={basicActive === 'all'}>\r\n                    <Row xs={1} md={1} lg={1} className=\"g-4\" id='cards'>\r\n                        {posts.map(post =>\r\n                            <div className=\"col-12 mt-3\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-horizontal\">\r\n\r\n                                        <div className=\"card-body\" id='card-body'>\r\n                                            <h4 className=\"card-title\">{post.job_title}</h4>\r\n                                            <p className=\"card-text\">\r\n                                                {post.location}, New Zealand\r\n                                            </p>\r\n                                            <p>\r\n                                                <b>Email: </b>{post.email}\r\n                                            </p>\r\n                                            <p>\r\n                                                <b>Phone: </b>{post.phone}\r\n                                            </p>\r\n                                            <p>\r\n                                                <b>Specialities: </b>{post.specialities}\r\n                                            </p>\r\n                                        </div>\r\n\r\n                                        <div className=\"card-body\" id='card-body'>\r\n                                            <p className=\"card-text\">\r\n                                                <b>Job ID: </b> {post._id}\r\n                                                <br></br>\r\n                                                <br></br>\r\n                                                <b>Descriptions: </b>{post.descriptions.slice(0, 250)}...\r\n                                            </p>\r\n                                            <ButtonBlue onClick={() => { navigate(`${post._id}`) }} name=\"See Details\" size='med'></ButtonBlue>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        )}\r\n\r\n                        {error ? <Alert key='danger' variant='danger' id='cards'> {error.toString()}</Alert> : null}\r\n                    </Row>\r\n                </MDBTabsPane>\r\n\r\n                <MDBTabsPane show={basicActive === 'Northland'}>\r\n                    {/* if there's data then show cards, if not then show error */}\r\n                    {northland.length > 0 ?\r\n                        <Row xs={1} md={1} lg={1} className=\"g-4\" id='cards'>\r\n                            {northland.map(north =>\r\n                                <div className=\"col-12 mt-3\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-horizontal\">\r\n\r\n                                            <div className=\"card-body\" id='card-body'>\r\n                                                <h4 className=\"card-title\">{north.job_title}</h4>\r\n                                                <p className=\"card-text\">\r\n                                                    {north.location}, New Zealand\r\n                                                </p>\r\n                                                <p>\r\n                                                    <b>Email: </b>{north.email}\r\n                                                </p>\r\n                                                <p>\r\n                                                    <b>Phone: </b>{north.phone}\r\n                                                </p>\r\n                                                <p>\r\n                                                    <b>Specialities: </b>{north.specialities}\r\n                                                </p>\r\n                                            </div>\r\n\r\n                                            <div className=\"card-body\" id='card-body'>\r\n                                                <p className=\"card-text\">\r\n                                                    <b>Job ID: </b> {north._id}\r\n                                                    <br></br>\r\n                                                    <br></br>\r\n                                                    <b>Descriptions: </b>{north.descriptions.slice(0, 250)}...\r\n                                                </p>\r\n                                                <ButtonBlue onClick={() => { navigate(`${north._id}`) }} name=\"See Details\" size='med'></ButtonBlue>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                            )}\r\n\r\n\r\n                            {error ? <Alert key='danger' variant='danger'> {error.toString()}</Alert> : null}\r\n\r\n\r\n                        </Row>\r\n\r\n                        : <div id='card-page'><Alert id='cards'>No job listing in this area</Alert></div>}\r\n\r\n                </MDBTabsPane>\r\n\r\n                <MDBTabsPane show={basicActive === 'Auckland'}>\r\n                    {/* if there's data then show cards, if not then show error */}\r\n                    {auckland.length > 0 ?\r\n                        <Row xs={1} md={1} lg={1} className=\"g-4\" id='cards'>\r\n                            {auckland.map(auck =>\r\n                                <div className=\"col-12 mt-3\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-horizontal\">\r\n\r\n                                            <div className=\"card-body\" id='card-body'>\r\n                                                <h4 className=\"card-title\">{auck.job_title}</h4>\r\n                                                <p className=\"card-text\">\r\n                                                    {auck.location}, New Zealand\r\n                                                </p>\r\n                                                <p>\r\n                                                    <b>Email: </b>{auck.email}\r\n                                                </p>\r\n                                                <p>\r\n                                                    <b>Phone: </b>{auck.phone}\r\n                                                </p>\r\n                                                <p>\r\n                                                    <b>Specialities: </b>{auck.specialities}\r\n                                                </p>\r\n                                            </div>\r\n\r\n                                            <div className=\"card-body\" id='card-body'>\r\n                                                <p className=\"card-text\">\r\n                                                    <b>Job ID: </b> {auck._id}\r\n                                                    <br></br>\r\n                                                    <br></br>\r\n                                                    <b>Descriptions: </b>{auck.descriptions.slice(0, 250)}...\r\n                                                </p>\r\n                                                <ButtonBlue onClick={() => { navigate(`${auck._id}`) }} name=\"See Details\" size='med'></ButtonBlue>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                            )}\r\n\r\n                            {error ? <Alert key='danger' variant='danger'> {error.toString()}</Alert> : null}\r\n\r\n                        </Row>\r\n                        : <div id='card-page'><Alert id='cards'>No job listing in this area</Alert></div>}\r\n                </MDBTabsPane>\r\n\r\n                <MDBTabsPane show={basicActive === 'Wellington'}>\r\n                    {/* if there's data then show cards, if not then show error */}\r\n                    {wellington.length > 0 ?\r\n                        <Row xs={1} md={1} lg={1} className=\"g-4\" id='cards'>\r\n                            {wellington.map(wlg =>\r\n                                <div className=\"col-12 mt-3\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-horizontal\">\r\n\r\n                                            <div className=\"card-body\" id='card-body'>\r\n                                                <h4 className=\"card-title\">{wlg.job_title}</h4>\r\n                                                <p className=\"card-text\">\r\n                                                    {wlg.location}, New Zealand\r\n                                                </p>\r\n                                                <p>\r\n                                                    <b>Email: </b>{wlg.email}\r\n                                                </p>\r\n                                                <p>\r\n                                                    <b>Phone: </b>{wlg.phone}\r\n                                                </p>\r\n                                                <p>\r\n                                                    <b>Specialities: </b>{wlg.specialities}\r\n                                                </p>\r\n                                            </div>\r\n\r\n                                            <div className=\"card-body\" id='card-body'>\r\n                                                <p className=\"card-text\">\r\n                                                    <b>Job ID: </b> {wlg._id}\r\n                                                    <br></br>\r\n                                                    <br></br>\r\n                                                    <b>Descriptions: </b>{wlg.descriptions.slice(0, 250)}...\r\n                                                </p>\r\n                                                <ButtonBlue onClick={() => { navigate(`${wlg._id}`) }} name=\"See Details\" size='med'></ButtonBlue>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n                            {error ? <Alert key='danger' variant='danger'> {error.toString()}</Alert> : null}\r\n\r\n                        </Row>\r\n                        : <div id='card-page'><Alert id='cards'>No job listing in this area</Alert></div>}\r\n                </MDBTabsPane>\r\n\r\n                <MDBTabsPane show={basicActive === 'Dunedin'}>\r\n                    {/* if there's data then show cards, if not then show error */}\r\n                    {dunedin.length > 0 ?\r\n                        <Row xs={1} md={1} lg={1} className=\"g-4\" id='cards'>\r\n                            {dunedin.map(dune =>\r\n                                <div className=\"col-12 mt-3\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-horizontal\">\r\n\r\n                                            <div className=\"card-body\" id='card-body'>\r\n                                                <h4 className=\"card-title\">{dune.job_title}</h4>\r\n                                                <p className=\"card-text\">\r\n                                                    {dune.location}, New Zealand\r\n                                                </p>\r\n                                                <p>\r\n                                                    <b>Email: </b>{dune.email}\r\n                                                </p>\r\n                                                <p>\r\n                                                    <b>Phone: </b>{dune.phone}\r\n                                                </p>\r\n                                                <p>\r\n                                                    <b>Specialities: </b>{dune.specialities}\r\n                                                </p>\r\n                                            </div>\r\n\r\n                                            <div className=\"card-body\" id='card-body'>\r\n                                                <p className=\"card-text\">\r\n                                                    <b>Job ID: </b> {dune._id}\r\n                                                    <br></br>\r\n                                                    <br></br>\r\n                                                    <b>Descriptions: </b>{dune.descriptions.slice(0, 250)}...\r\n                                                </p>\r\n                                                <ButtonBlue onClick={() => { navigate(`${dune._id}`) }} name=\"See Details\" size='med'></ButtonBlue>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n                            {error ? <Alert key='danger' variant='danger'> {error.toString()}</Alert> : null}\r\n\r\n                        </Row>\r\n                        : <div id='card-page'><Alert id='cards'>No job listing in this area</Alert></div>}\r\n                </MDBTabsPane>\r\n\r\n                <MDBTabsPane show={basicActive === 'Christchurch'}>\r\n                    {/* if there's data then show cards, if not then show error */}\r\n                    {christchurch.length > 0 ?\r\n                        <Row xs={1} md={1} lg={1} className=\"g-4\" id='cards'>\r\n                            {christchurch.map(chch =>\r\n                                <div className=\"col-12 mt-3\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-horizontal\">\r\n\r\n                                            <div className=\"card-body\" id='card-body'>\r\n                                                <h4 className=\"card-title\">{chch.job_title}</h4>\r\n                                                <p className=\"card-text\">\r\n                                                    {chch.location}, New Zealand\r\n                                                </p>\r\n                                                <p>\r\n                                                    <b>Email: </b>{chch.email}\r\n                                                </p>\r\n                                                <p>\r\n                                                    <b>Phone: </b>{chch.phone}\r\n                                                </p>\r\n                                                <p>\r\n                                                    <b>Specialities: </b>{chch.specialities}\r\n                                                </p>\r\n                                            </div>\r\n\r\n                                            <div className=\"card-body\" id='card-body'>\r\n                                                <p className=\"card-text\">\r\n                                                    <b>Job ID: </b> {chch._id}\r\n                                                    <br></br>\r\n                                                    <br></br>\r\n                                                    <b>Descriptions: </b>{chch.descriptions.slice(0, 250)}...\r\n                                                </p>\r\n                                                <ButtonBlue onClick={() => { navigate(`${chch._id}`) }} name=\"See Details\" size='med'></ButtonBlue>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                            )}\r\n\r\n                            {error ? <Alert key='danger' variant='danger'> {error.toString()}</Alert> : null}\r\n\r\n                        </Row>\r\n                        : <div id='card-page'><Alert id='cards'>No job listing in this area</Alert></div>}\r\n                </MDBTabsPane>\r\n\r\n                <MDBTabsPane show={basicActive === 'Queenstown'}>\r\n                    {/* if there's data then show cards, if not then show error */}\r\n                    {queenstown.length > 0 ?\r\n                        <Row xs={1} md={1} lg={1} className=\"g-4\" id='cards'>\r\n                            {queenstown.map(queens =>\r\n                                <div className=\"col-12 mt-3\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-horizontal\">\r\n\r\n                                            <div className=\"card-body\" id='card-body'>\r\n                                                <h4 className=\"card-title\">{queens.job_title}</h4>\r\n                                                <p className=\"card-text\">\r\n                                                    {queens.location}, New Zealand\r\n                                                </p>\r\n                                                <p>\r\n                                                    <b>Email: </b>{queens.email}\r\n                                                </p>\r\n                                                <p>\r\n                                                    <b>Phone: </b>{queens.phone}\r\n                                                </p>\r\n                                                <p>\r\n                                                    <b>Specialities: </b>{queens.specialities}\r\n                                                </p>\r\n                                            </div>\r\n\r\n                                            <div className=\"card-body\" id='card-body'>\r\n                                                <p className=\"card-text\">\r\n                                                    <b>Job ID: </b> {queens._id}\r\n                                                    <br></br>\r\n                                                    <br></br>\r\n                                                    <b>Descriptions: </b>{queens.descriptions.slice(0, 250)}...\r\n                                                </p>\r\n                                                <ButtonBlue onClick={() => { navigate(`${queens._id}`) }} name=\"See Details\" size='med'></ButtonBlue>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                            )}\r\n\r\n                            {error ? <Alert key='danger' variant='danger'> {error.toString()}</Alert> : null}\r\n\r\n                        </Row>\r\n                        : <div id='card-page'><Alert id='cards'>No job listing in this area</Alert></div>}\r\n                </MDBTabsPane>\r\n            </MDBTabsContent>\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["JobList","useState","posts","setPost","northland","setNorthland","auckland","setAuckland","wellington","setWellington","dunedin","setDunedin","christchurch","setChristchurch","queenstown","setQueenstown","error","setError","basicActive","setBasicActive","navigate","useNavigate","handleBasicClick","value","useEffect","axios","then","res","console","log","data","catch","err","pills","justify","className","id","onClick","active","show","xs","md","lg","map","post","job_title","location","email","phone","specialities","_id","descriptions","slice","name","size","variant","toString","length","north","auck","wlg","dune","chch","queens","Row","React","ref","bsPrefix","as","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","_jsx","classNames","displayName"],"sourceRoot":""}